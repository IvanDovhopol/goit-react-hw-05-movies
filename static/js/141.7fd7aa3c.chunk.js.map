{"version":3,"file":"static/js/141.7fd7aa3c.chunk.js","mappings":"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","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","path/to/services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const SearchField = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  font-size: 20px;\n  margin: 15px 25px;\n  color: black;\n  text-decoration: dashed;\n  font-weight: 500;\n  text-transform: uppercase;\n  background-color: ${p => p.theme.colors.muted};\n  border-radius: ${p => p.theme.radii.medium};\n  box-shadow: 5px 5px 5px black;\n  cursor: zoom-in;\n\n  &:hover {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  &.active {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Label = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n\nexport const MoviesList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\n  grid-gap: 12px;\n  margin-top: 10px;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Name = styled.p`\n  text-align: center;\n  font-weight: 600;\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const Item = styled.li`\n  background: #fff;\n  border-radius: 25px;\n  width: 100%;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.04);\n    cursor: zoom-in;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport * as API from 'path/to/services/api';\nimport {\n  SearchField,\n  Form,\n  SearchButton,\n  Label,\n  Input,\n  MoviesList,\n  Name,\n  Item,\n  StyledLink,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const query = searchQuery.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    try {\n      async function fetch() {\n        if (!query) return;\n\n        const { results } = await API.getMoviesByKeyword(query);\n        setMovies(results);\n      }\n      fetch();\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [query, setMovies]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const query = e.currentTarget.elements.search.value.toLowerCase();\n    setSearchQuery({ query });\n\n    e.target.reset();\n  }\n\n  return (\n    <>\n      <SearchField>\n        <Form onSubmit={handleSubmit}>\n          <SearchButton type=\"submit\">\n            <Label>Search</Label>\n          </SearchButton>\n\n          <Input\n            name=\"search\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n          />\n        </Form>\n      </SearchField>\n\n      <MoviesList>\n        {movies.map(({ id, poster_path, title }) => {\n          return (\n            <Item key={id}>\n              <StyledLink to={`/movies/${id}`} state={location}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n                  alt={title}\n                />\n              </StyledLink>\n              <Name>{title}</Name>\n            </Item>\n          );\n        })}\n      </MoviesList>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '7907e1cc37fd6f724820da1650cbe62b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n\n  return response.data;\n};\n\nexport const getMovieDetails = async ({ id }) => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const getMovieCredits = async ({ id }) => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const getMovieReviews = async ({ id }) => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n};\n\nexport const getMoviesByKeyword = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n  );\n\n  return response.data;\n};\n"],"names":["SearchField","styled","StyledLink","NavLink","p","theme","colors","muted","radii","medium","accent","Form","SearchButton","Label","Input","MoviesList","Name","Item","useState","movies","setMovies","useSearchParams","searchQuery","setSearchQuery","query","get","location","useLocation","useEffect","fetch","API","results","error","console","log","message","onSubmit","e","preventDefault","currentTarget","elements","search","value","toLowerCase","target","reset","type","name","autoComplete","autoFocus","placeholder","map","id","poster_path","title","to","state","src","alt","API_KEY","axios","getTrendingMovies","response","data","getMovieDetails","getMovieCredits","getMovieReviews","getMoviesByKeyword"],"sourceRoot":""}