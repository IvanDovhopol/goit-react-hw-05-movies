{"version":3,"file":"static/js/122.8381d9d3.chunk.js","mappings":"sQAiDA,EA5CgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAUC,EAAAA,EAAAA,MAChB,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA0BN,EAAAA,EAAAA,WAAS,GAAnC,eAAOO,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,IAAK,IACYI,EADb,mCACF,sGAC4BC,EAAAA,GAAoBR,GADhD,gBACUS,EADV,EACUA,QACRV,EAAWU,GACXJ,GAAS,GAHX,2CADE,qDAMFE,GAMD,CALC,MAAOH,GACPM,QAAQC,IAAIP,EAAMQ,SAClBP,GAAS,EACV,CAVD,QAWEF,GAAa,EACd,CACF,GAAE,CAACH,KAGF,iCACU,OAAPF,QAAO,IAAPA,OAAA,EAAAA,EAASe,QAAS,IACjB,wBACGf,EAAQgB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,EAKZ,MAGe,IAAnBjB,EAAQe,SAAiBT,IAAUF,IAClC,sEAIP,C,mMC7CKgB,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAAA,qCACSD,EADT,YADQ,cACzBG,EADyB,yBAKxBA,EAASC,MALe,2CAAH,qDAQjBC,EAAe,mCAAG,8FAASR,EAAT,EAASA,GAAT,SACNI,EAAAA,EAAAA,IAAA,gBACZJ,EADY,oBACEG,EADF,oBADM,cACvBG,EADuB,yBAKtBA,EAASC,MALa,2CAAH,sDAQfE,EAAe,mCAAG,8FAAST,EAAT,EAASA,GAAT,SACNI,EAAAA,EAAAA,IAAA,gBACZJ,EADY,4BACUG,EADV,oBADM,cACvBG,EADuB,yBAKtBA,EAASC,MALa,2CAAH,sDAQfG,EAAe,mCAAG,8FAASV,EAAT,EAASA,GAAT,SACNI,EAAAA,EAAAA,IAAA,gBACZJ,EADY,4BACUG,EADV,2BADM,cACvBG,EADuB,yBAKtBA,EAASC,MALa,2CAAH,sDAQfI,EAAkB,mCAAG,WAAMC,GAAN,uFACTR,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACoBS,EADpB,oBADS,cAC1BN,EAD0B,yBAKzBA,EAASC,MALgB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","path/to/services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from 'path/to/services/api';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const movieId = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    try {\n      async function fetch() {\n        const { results } = await API.getMovieReviews(movieId);\n        setReviews(results);\n        setError(false);\n      }\n      fetch();\n    } catch (error) {\n      console.log(error.message);\n      setError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews?.length > 0 && (\n        <ul>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <b>{author}</b>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {reviews.length === 0 && !error && !isLoading && (\n        <p>We don`t have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import axios from 'axios';\n\nconst API_KEY = '7907e1cc37fd6f724820da1650cbe62b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n\n  return response.data;\n};\n\nexport const getMovieDetails = async ({ id }) => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const getMovieCredits = async ({ id }) => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const getMovieReviews = async ({ id }) => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n};\n\nexport const getMoviesByKeyword = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n  );\n\n  return response.data;\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","isLoading","setIsLoading","error","setError","useEffect","fetch","API","results","console","log","message","length","map","id","author","content","API_KEY","axios","getTrendingMovies","response","data","getMovieDetails","getMovieCredits","getMovieReviews","getMoviesByKeyword","query"],"sourceRoot":""}