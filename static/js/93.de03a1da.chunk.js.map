{"version":3,"file":"static/js/93.de03a1da.chunk.js","mappings":"6PAEaA,E,QAASC,GAAAA,GAAH,wR,6BC4CnB,EAvCa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAUC,EAAAA,EAAAA,MAchB,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAK,IACYC,EADb,mCACF,sGACyBC,EAAAA,GAAoBJ,GAD7C,gBACUK,EADV,EACUA,KACRN,EAAUM,GAFZ,2CADE,qDAKFF,GAGD,CAFC,MAAOG,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CACF,GAAE,CAACT,KAGF,SAACL,EAAD,UACGG,EAAOY,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC1C,OACE,2BACE,gBACEC,IACEH,EAAY,yCAC0BA,GAClCI,EAENC,IAAKJ,KAGP,uBAAIA,KACJ,uBAAIC,MAXGH,EAcZ,KAGN,C,mMC1CKO,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAAA,qCACSD,EADT,YADQ,cACzBG,EADyB,yBAKxBA,EAASC,MALe,2CAAH,qDAQjBC,EAAe,mCAAG,8FAASC,EAAT,EAASA,GAAT,SACNL,EAAAA,EAAAA,IAAA,gBACZK,EADY,oBACEN,EADF,oBADM,cACvBG,EADuB,yBAKtBA,EAASC,MALa,2CAAH,sDAQfG,EAAe,mCAAG,8FAASD,EAAT,EAASA,GAAT,SACNL,EAAAA,EAAAA,IAAA,gBACZK,EADY,4BACUN,EADV,oBADM,cACvBG,EADuB,yBAKtBA,EAASC,MALa,2CAAH,sDAQfI,EAAe,mCAAG,8FAASF,EAAT,EAASA,GAAT,SACNL,EAAAA,EAAAA,IAAA,gBACZK,EADY,4BACUN,EADV,2BADM,cACvBG,EADuB,yBAKtBA,EAASC,MALa,2CAAH,sDAQfK,EAAkB,mCAAG,WAAMC,GAAN,uFACTT,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACoBU,EADpB,oBADS,cAC1BP,EAD0B,yBAKzBA,EAASC,MALgB,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","path/to/services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Actors = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\n  grid-gap: 12px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { useEffect } from 'react';\nimport * as API from 'path/to/services/api';\nimport { useState } from 'react';\nimport { Actors } from './Cast.styled';\nimport defaultImg from 'path/to/placeholder-photo.jpg';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const movieId = useParams();\n\n  useEffect(() => {\n    try {\n      async function fetch() {\n        const { cast } = await API.getMovieCredits(movieId);\n        setActors(cast);\n      }\n      fetch();\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [movieId]);\n\n  return (\n    <Actors>\n      {actors.map(({ cast_id, profile_path, name, character }) => {\n        return (\n          <li key={cast_id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                  : defaultImg\n              }\n              alt={name}\n            />\n\n            <p>{name}</p>\n            <p>{character}</p>\n          </li>\n        );\n      })}\n    </Actors>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '7907e1cc37fd6f724820da1650cbe62b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n\n  return response.data;\n};\n\nexport const getMovieDetails = async ({ id }) => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const getMovieCredits = async ({ id }) => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const getMovieReviews = async ({ id }) => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n};\n\nexport const getMoviesByKeyword = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n  );\n\n  return response.data;\n};\n"],"names":["Actors","styled","useState","actors","setActors","movieId","useParams","useEffect","fetch","API","cast","error","console","log","message","map","cast_id","profile_path","name","character","src","defaultImg","alt","API_KEY","axios","getTrendingMovies","response","data","getMovieDetails","id","getMovieCredits","getMovieReviews","getMoviesByKeyword","query"],"sourceRoot":""}