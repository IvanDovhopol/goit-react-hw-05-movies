{"version":3,"file":"static/js/93.6c5a1b3a.chunk.js","mappings":"qPAEaA,E,OAASC,GAAAA,GAAH,iG,kBC2CnB,EAvCa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAK,IACYC,EADb,mCACF,sGACyBC,EAAAA,KADzB,gBACUC,EADV,EACUA,KACRJ,EAAUI,GAFZ,2CADE,qDAKFF,GAGD,CAFC,MAAOG,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CACF,GAAE,KAGD,SAACZ,EAAD,UACGG,EAAOU,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC1C,OACE,2BACE,gBACEC,IACEH,EAAY,yCAC0BA,GAClCI,EAENC,IAAKJ,KAGP,uBAAIA,KACJ,mBACA,uBAAIC,MAZGH,EAeZ,KAGN,C,sKCzCKO,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAAA,qCACSD,EADT,YADQ,cACzBG,EADyB,yBAKxBA,EAASC,MALe,2CAAH,qDASjBC,EAAe,mCAAG,oGACNJ,EAAAA,EAAAA,IAAA,8BACED,EADF,oBADM,cACvBG,EADuB,yBAKtBA,EAASC,MALa,2CAAH,qDAQfE,EAAe,mCAAG,oGACNL,EAAAA,EAAAA,IAAA,sCACUD,EADV,oBADM,cACvBG,EADuB,yBAKtBA,EAASC,MALa,2CAAH,qDAQfG,EAAe,mCAAG,oGACNN,EAAAA,EAAAA,IAAA,sCACUD,EADV,2BADM,cACvBG,EADuB,yBAKtBA,EAASC,MALa,2CAAH,oD,uiRC9Bb,SAASI,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAGfC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAS,CACpDC,IAAK,CACHK,MAAOH,OAAOC,OAAOH,MAG3B,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","path/to/services/api.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Actors = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  gap: 15px;\n`;\n","import { useEffect } from 'react';\nimport * as API from 'path/to/services/api';\nimport { useState } from 'react';\nimport { Actors } from './Cast.styled';\nimport defaultImg from 'path/to/placeholder-photo.jpg';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n\n  useEffect(() => {\n    try {\n      async function fetch() {\n        const { cast } = await API.getMovieCredits();\n        setActors(cast);\n      }\n      fetch();\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, []);\n\n  return (\n    <Actors>\n      {actors.map(({ cast_id, profile_path, name, character }) => {\n        return (\n          <li key={cast_id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                  : defaultImg\n              }\n              alt={name}\n            />\n\n            <b>{name}</b>\n            <br />\n            <b>{character}</b>\n          </li>\n        );\n      })}\n    </Actors>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '7907e1cc37fd6f724820da1650cbe62b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n\n  return response.data;\n};\n\n// {movie_id}\nexport const getMovieDetails = async () => {\n  const response = await axios.get(\n    `movie/19995?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const getMovieCredits = async () => {\n  const response = await axios.get(\n    `movie/19995/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const getMovieReviews = async () => {\n  const response = await axios.get(\n    `movie/19995/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n};\n\nexport const getMoviesByKeyword = async ({ query }) => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.data;\n};\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["Actors","styled","useState","actors","setActors","useEffect","fetch","API","cast","error","console","log","message","map","cast_id","profile_path","name","character","src","defaultImg","alt","API_KEY","axios","getTrendingMovies","response","data","getMovieDetails","getMovieCredits","getMovieReviews","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value"],"sourceRoot":""}